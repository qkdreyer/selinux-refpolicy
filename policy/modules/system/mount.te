
policy_module(mount, 1.11.0)

########################################
#
# Declarations
#

## <desc>
## <p>
## Allow the mount command to mount any directory or file.
## </p>
## </desc>
gen_tunable(allow_mount_anyfile, false)

type mount_t;
type mount_exec_t;
init_system_domain(mount_t, mount_exec_t)
role system_r types mount_t;

type fusermount_exec_t;
domain_entry_file(mount_t, fusermount_exec_t)

typealias mount_t alias mount_ntfs_t;
typealias mount_exec_t alias mount_ntfs_exec_t;

type mount_loopback_t;
files_type(mount_loopback_t)
typealias mount_loopback_t alias mount_loop_t;

type mount_tmp_t;
files_tmp_file(mount_tmp_t)

type unconfined_mount_t;
application_domain(unconfined_mount_t, mount_exec_t)
role system_r types unconfined_mount_t;

type mount_var_run_t;
files_pid_file(mount_var_run_t)

type showmount_t;
type showmount_exec_t;
application_domain(showmount_t, showmount_exec_t)
role system_r types showmount_t;

########################################
#
# mount local policy
#

allow mount_t self:capability { fsetid ipc_lock setpcap sys_rawio sys_resource sys_admin dac_override dac_read_search chown sys_tty_config setuid setgid };
allow mount_t self:process { getcap getsched ptrace setcap signal };
allow mount_t self:fifo_file rw_fifo_file_perms;
allow mount_t self:unix_stream_socket create_stream_socket_perms;
allow mount_t self:unix_dgram_socket create_socket_perms; 

allow mount_t mount_loopback_t:file read_file_perms;

allow mount_t mount_tmp_t:file manage_file_perms;
allow mount_t mount_tmp_t:dir manage_dir_perms;

can_exec(mount_t, mount_exec_t)

files_tmp_filetrans(mount_t, mount_tmp_t, { file dir })

manage_dirs_pattern(mount_t,mount_var_run_t,mount_var_run_t)
manage_files_pattern(mount_t,mount_var_run_t,mount_var_run_t)
files_pid_filetrans(mount_t,mount_var_run_t,dir)
files_var_filetrans(mount_t,mount_var_run_t,dir)

kernel_dontaudit_getattr_core_if(mount_t)
kernel_list_unlabeled(mount_t)
kernel_mount_unlabeled(mount_t)
kernel_read_system_state(mount_t)
kernel_read_network_state(mount_t)
kernel_read_kernel_sysctls(mount_t)
kernel_search_debugfs(mount_t)
kernel_setsched(mount_t)
kernel_use_fds(mount_t)
kernel_unmount_unlabeled(mount_t)
kernel_request_load_module(mount_t)

corecmd_exec_bin(mount_t)

dev_getattr_all_blk_files(mount_t)
dev_list_all_dev_nodes(mount_t)
dev_read_usbfs(mount_t)
dev_read_rand(mount_t)
dev_read_sysfs(mount_t)
dev_rw_lvm_control(mount_t)
dev_dontaudit_getattr_all_chr_files(mount_t)
dev_dontaudit_getattr_memory_dev(mount_t)
dev_getattr_sound_dev(mount_t)

domain_use_interactive_fds(mount_t)
domain_dontaudit_search_all_domains_state(mount_t)

files_search_all(mount_t)
files_read_etc_files(mount_t)
files_manage_etc_runtime_files(mount_t)
files_etc_filetrans_etc_runtime(mount_t, file)
files_mounton_all_mountpoints(mount_t)
files_write_all_mountpoints(mount_t)
files_unmount_rootfs(mount_t)
files_relabel_all_file_type_fs(mount_t)
files_mount_all_file_type_fs(mount_t)
files_unmount_all_file_type_fs(mount_t)
files_read_isid_type_files(mount_t)
files_read_usr_files(mount_t)
files_list_mnt(mount_t)

fs_list_all(mount_t)
fs_getattr_all_fs(mount_t)
fs_mount_all_fs(mount_t)
fs_unmount_all_fs(mount_t)
fs_remount_all_fs(mount_t)
fs_relabelfrom_all_fs(mount_t)
fs_rw_anon_inodefs_files(mount_t)
fs_rw_tmpfs_chr_files(mount_t)
fs_manage_tmpfs_dirs(mount_t)
fs_read_tmpfs_symlinks(mount_t)
fs_read_fusefs_files(mount_t)
fs_manage_nfs_dirs(mount_t)
fs_read_nfs_symlinks(mount_t)

mls_file_read_all_levels(mount_t)
mls_file_write_all_levels(mount_t)

selinux_get_enforce_mode(mount_t)

storage_raw_read_fixed_disk(mount_t)
storage_raw_write_fixed_disk(mount_t)
storage_raw_read_removable_device(mount_t)
storage_raw_write_removable_device(mount_t)
storage_rw_fuse(mount_t)

term_use_all_terms(mount_t)

auth_use_nsswitch(mount_t)

init_use_fds(mount_t)
init_use_script_ptys(mount_t)
init_dontaudit_getattr_initctl(mount_t)
init_stream_connect_script(mount_t)
init_rw_script_stream_sockets(mount_t)

logging_send_syslog_msg(mount_t)

miscfiles_read_localization(mount_t)

sysnet_use_portmap(mount_t)

seutil_read_config(mount_t)

userdom_use_all_users_fds(mount_t)
userdom_manage_user_home_content_dirs(mount_t)
userdom_read_user_home_content_symlinks(mount_t)

optional_policy(`
	abrt_rw_fifo_file(mount_t)
')

ifdef(`distro_redhat',`
	optional_policy(`
		auth_read_pam_console_data(mount_t)
		fs_relabelfrom_dos_fs(mount_t)
	')
')

ifdef(`distro_ubuntu',`
	optional_policy(`
		unconfined_domain(mount_t)
	')
')

corecmd_exec_shell(mount_t)

modutils_domtrans_insmod(mount_t)

fstools_domtrans(mount_t)

tunable_policy(`allow_mount_anyfile',`
	auth_read_all_dirs_except_shadow(mount_t)
	auth_read_all_files_except_shadow(mount_t)
	files_mounton_non_security(mount_t)
	files_rw_all_inherited_files(mount_t)
')

optional_policy(`
	corenet_all_recvfrom_unlabeled(mount_t)
	corenet_all_recvfrom_netlabel(mount_t)
	corenet_tcp_sendrecv_all_if(mount_t)
	corenet_raw_sendrecv_all_if(mount_t)
	corenet_udp_sendrecv_all_if(mount_t)
	corenet_tcp_sendrecv_all_nodes(mount_t)
	corenet_raw_sendrecv_all_nodes(mount_t)
	corenet_udp_sendrecv_all_nodes(mount_t)
	corenet_tcp_sendrecv_all_ports(mount_t)
	corenet_udp_sendrecv_all_ports(mount_t)
	corenet_tcp_bind_all_nodes(mount_t)
	corenet_udp_bind_all_nodes(mount_t)
	corenet_tcp_bind_generic_port(mount_t)
	corenet_udp_bind_generic_port(mount_t)
	corenet_tcp_bind_reserved_port(mount_t)
	corenet_udp_bind_reserved_port(mount_t)
	corenet_tcp_bind_all_rpc_ports(mount_t)
	corenet_udp_bind_all_rpc_ports(mount_t)
	corenet_dontaudit_tcp_bind_all_reserved_ports(mount_t)
	corenet_dontaudit_udp_bind_all_reserved_ports(mount_t)
	corenet_tcp_connect_all_ports(mount_t)
	corenet_sendrecv_generic_server_packets(mount_t)
	corenet_sendrecv_all_client_packets(mount_t)

	fs_search_rpc(mount_t)

	rpc_stub(mount_t)

	rpc_domtrans_rpcd(mount_t)
')

optional_policy(`
	apm_use_fds(mount_t)
')

optional_policy(`
	cron_system_entry(mount_t, mount_exec_t)
')

optional_policy(`
	dbus_system_bus_client(mount_t)

	optional_policy(`
		hal_dbus_chat(mount_t)
	')
')


optional_policy(`
	hal_write_log(mount_t)
	hal_use_fds(mount_t)
	hal_dontaudit_rw_pipes(mount_t)
')

optional_policy(`
	ifdef(`hide_broken_symptoms',`
		rhgb_dontaudit_rw_stream_sockets(mount_t)
		term_dontaudit_use_ptmx(mount_t)
	')
')

optional_policy(`
	lvm_domtrans(mount_t)
')

optional_policy(`
	rpm_rw_pipes(mount_t)
')

optional_policy(`
	samba_domtrans_smbmount(mount_t)
	samba_read_config(mount_t)
')

optional_policy(`
	ssh_exec(mount_t)
')

optional_policy(`
	usbmuxd_stream_connect(mount_t)
')

optional_policy(`
	vmware_exec_host(mount_t)
')

########################################
#
# Unconfined mount local policy
#

optional_policy(`
	unconfined_domain_noaudit(unconfined_mount_t)
	userdom_unpriv_usertype(unconfined, unconfined_mount_t)
	files_etc_filetrans_etc_runtime(unconfined_mount_t, file)
')

######################################
#
# showmount local policy
#

allow showmount_t self:tcp_socket create_stream_socket_perms;
allow showmount_t self:udp_socket create_socket_perms;

kernel_read_system_state(showmount_t)

corenet_all_recvfrom_unlabeled(showmount_t)
corenet_all_recvfrom_netlabel(showmount_t)
corenet_tcp_sendrecv_generic_if(showmount_t)
corenet_udp_sendrecv_generic_if(showmount_t)
corenet_tcp_sendrecv_generic_node(showmount_t)
corenet_udp_sendrecv_generic_node(showmount_t)
corenet_tcp_sendrecv_all_ports(showmount_t)
corenet_udp_sendrecv_all_ports(showmount_t)
corenet_tcp_bind_generic_node(showmount_t)
corenet_udp_bind_generic_node(showmount_t)
corenet_tcp_bind_all_rpc_ports(showmount_t)
corenet_udp_bind_all_rpc_ports(showmount_t)
corenet_tcp_connect_all_ports(showmount_t)
corenet_sendrecv_all_client_packets(showmount_t)

files_read_etc_files(showmount_t)

miscfiles_read_localization(showmount_t)

sysnet_dns_name_resolve(showmount_t)

userdom_use_user_terminals(showmount_t)
