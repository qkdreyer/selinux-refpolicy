## <summary>Dpkg medium-level package manager for Debian.</summary>

########################################
## <summary>
##	Execute a domain transition to
##	run Dpkg.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transtion.
##	</summary>
## </param>
#
interface(`dpkg_domtrans',`
	gen_require(`
		type dpkg_t, dpkg_exec_t;
	')

	domtrans_pattern($1, dpkg_exec_t, dpkg_t)
	corecmd_search_bin($1)
	files_search_usr($1)
')

########################################
## <summary>
##	Execute a domain transition to
##	run Dpkg Script.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`dpkg_domtrans_script',`
	gen_require(`
		type dpkg_script_t;
	')

	corecmd_shell_domtrans($1, dpkg_script_t)
	allow dpkg_script_t $1:fd use;
	allow dpkg_script_t $1:fifo_file rw_file_perms;
	allow dpkg_script_t $1:process sigchld;
')

########################################
## <summary>
##	Execute a domain transition to
##	run Dpkg and allow the
##	specified role the Dpkg domain
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	The role to be allowed the Dpkg domain.
##	</summary>
## </param>
## <rolecap/>
#
interface(`dpkg_run',`
	gen_require(`
		type dpkg_t, dpkg_script_t;
	')

	dpkg_domtrans($1)
	seutil_run_loadpolicy(dpkg_script_t, $2)
	role $2 types dpkg_t;
	role $2 types dpkg_script_t;
')

########################################
## <summary>
##	Inherit and use Dpkg file descriptors.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`dpkg_use_fds',`
	gen_require(`
		type dpkg_t;
	')

	allow $1 dpkg_t:fd use;
')

########################################
## <summary>
##	Read Dpkg pipes.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`dpkg_read_pipes',`
	gen_require(`
		type dpkg_t;
	')

	allow $1 dpkg_t:fifo_file read_fifo_file_perms;
')

########################################
## <summary>
##	Read and write Dpkg pipes.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`dpkg_rw_pipes',`
	gen_require(`
		type dpkg_t;
	')

	allow $1 dpkg_t:fifo_file rw_fifo_file_perms;
')

########################################
## <summary>
##	Inherit and use Dpkg Script file
##	descriptors.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`dpkg_use_script_fds',`
	gen_require(`
		type dpkg_script_t;
	')

	allow $1 dpkg_script_t:fd use;
')

########################################
## <summary>
##	Read Dpkg lib content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`dpkg_read_db',`
	gen_require(`
		type dpkg_var_lib_t;
	')

	allow $1 dpkg_var_lib_t:dir list_dir_perms;
	read_files_pattern($1, dpkg_var_lib_t, dpkg_var_lib_t)
	read_lnk_files_pattern($1, dpkg_var_lib_t, dpkg_var_lib_t)
	files_search_var_lib($1)
')

########################################
## <summary>
##	Manage Dpkg lib content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`dpkg_manage_db',`
	gen_require(`
		type dpkg_var_lib_t;
	')

	manage_files_pattern($1, dpkg_var_lib_t, dpkg_var_lib_t)
	manage_lnk_files_pattern($1, dpkg_var_lib_t, dpkg_var_lib_t)
	files_search_var_lib($1)
')

########################################
## <summary>
##	Do not audit attempts to Manage Dpkg
##	lib content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`dpkg_dontaudit_manage_db',`
	gen_require(`
		type dpkg_var_lib_t;
	')

	dontaudit $1 dpkg_var_lib_t:dir rw_dir_perms;
	dontaudit $1 dpkg_var_lib_t:file manage_file_perms;
	dontaudit $1 dpkg_var_lib_t:lnk_file manage_lnk_file_perms;
')

########################################
## <summary>
##	Manage Dpkg lock files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`dpkg_lock_db',`
	gen_require(`
		type dpkg_lock_t, dpkg_var_lib_t;
	')

	allow $1 dpkg_var_lib_t:dir list_dir_perms;
	allow $1 dpkg_lock_t:file manage_file_perms;
	files_search_var_lib($1)
')
