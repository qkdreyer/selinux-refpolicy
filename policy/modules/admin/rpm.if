## <summary>RPM Package Manager.</summary>

########################################
## <summary>
##	Execute a domain transition to
##	run RPM.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`rpm_domtrans',`
	gen_require(`
		type rpm_t, rpm_exec_t, debuginfo_exec_t;
		attribute rpm_transition_domain;
	')

	typeattribute $1 rpm_transition_domain;

	domtrans_pattern($1, rpm_exec_t, rpm_t)
	domtrans_pattern($1, debuginfo_exec_t, rpm_t)
	corecmd_search_bin($1)
	files_search_usr($1)
')

########################################
## <summary>
##	Execute a domain transition to
##	run Debuginfo Install.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`rpm_domtrans_debuginfo',`
	gen_require(`
		type rpm_t;
		type debuginfo_exec_t;
	')

	domtrans_pattern($1, debuginfo_exec_t, rpm_t)
	corecmd_search_bin($1)
	files_search_usr($1)
')

########################################
## <summary>
##	Execute a domain transition to
##	run RPM Script.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`rpm_domtrans_script',`
	gen_require(`
		type rpm_script_t;
	')

	corecmd_shell_domtrans($1, rpm_script_t)
	allow rpm_script_t $1:fd use;
	allow rpm_script_t $1:fifo_file rw_file_perms;
	allow rpm_script_t $1:process sigchld;
')

########################################
## <summary>
##	Execute a domain transition to
##	run RPM and allow the
##	specified role the RPM domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	The role to allow the RPM domain.
##	</summary>
## </param>
## <rolecap/>
#
interface(`rpm_run',`
	gen_require(`
		type rpm_t, rpm_script_t;
	')

	rpm_domtrans($1)
	role $2 types rpm_t;
	role $2 types rpm_script_t;

	domain_system_change_exemption($1)
	role_transition $2 rpm_exec_t system_r;
	allow $2 system_r;

	seutil_run_loadpolicy(rpm_script_t, $2)
	seutil_run_semanage(rpm_script_t, $2)
	seutil_run_setfiles(rpm_script_t, $2)
')

########################################
## <summary>
##	Make rpm_exec_t an entry point for
##	the specified domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
# 
interface(`rpm_entry_type',`
	gen_require(`
		type rpm_exec_t;
	')

	domain_entry_file($1, rpm_exec_t)
')

########################################
## <summary>
##	Execute RPM client.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_exec',`
	gen_require(`
		type rpm_exec_t;
	')

	can_exec($1, rpm_exec_t)
	corecmd_search_bin($1)
')

########################################
## <summary>
##	Send null signals to RPM.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_signull',`
	gen_require(`
		type rpm_t;
	')

	allow $1 rpm_t:process signull;
')

########################################
## <summary>
##	Inherit and use RPM file descriptors.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_use_fds',`
	gen_require(`
		type rpm_t;
	')

	allow $1 rpm_t:fd use;
')

########################################
## <summary>
##	Read RPM pipes.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_read_pipes',`
	gen_require(`
		type rpm_t;
	')

	allow $1 rpm_t:fifo_file read_fifo_file_perms;
')

########################################
## <summary>
##	Read and write RPM pipes.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_rw_pipes',`
	gen_require(`
		type rpm_t;
	')

	allow $1 rpm_t:fifo_file rw_fifo_file_perms;
')

########################################
## <summary>
##	Do not audit attempts to read and
##	write leaked RPM file descriptors.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`rpm_dontaudit_leaks',`
	gen_require(`
		type rpm_t, rpm_var_cache_t;
		type rpm_script_t, rpm_var_run_t, rpm_tmp_t;
		type rpm_tmpfs_t, rpm_script_tmp_t, rpm_var_lib_t;
	')

	dontaudit $1 rpm_t:fifo_file rw_inherited_fifo_file_perms;
 	dontaudit $1 rpm_t:tcp_socket rw_inherited_sock_file_perms;
	dontaudit $1 rpm_t:unix_dgram_socket rw_inherited_sock_file_perms;
	dontaudit $1 rpm_t:shm rw_shm_perms;

	dontaudit $1 rpm_script_t:fd use;
	dontaudit $1 rpm_script_t:fifo_file rw_inherited_fifo_file_perms;

	dontaudit $1 rpm_var_run_t:file rw_inherited_file_perms;

	dontaudit $1 rpm_tmp_t:file rw_inherited_file_perms;
 	dontaudit $1 rpm_tmpfs_t:dir rw_dir_perms;
 	dontaudit $1 rpm_tmpfs_t:file rw_inherited_file_perms;
	dontaudit $1 rpm_script_tmp_t:file rw_inherited_file_perms;
	dontaudit $1 rpm_var_lib_t:file rw_inherited_file_perms;
	dontaudit $1 rpm_var_cache_t:file  rw_inherited_file_perms;
')

########################################
## <summary>
##	Send and receive messages from
##	RPM over dbus.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_dbus_chat',`
	gen_require(`
		type rpm_t;
		class dbus send_msg;
	')

	allow $1 rpm_t:dbus send_msg;
	allow rpm_t $1:dbus send_msg;
')

########################################
## <summary>
##	Do not audit attempts to send and
##	receive messages from RPM over dbus.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`rpm_dontaudit_dbus_chat',`
	gen_require(`
		type rpm_t;
		class dbus send_msg;
	')

	dontaudit $1 rpm_t:dbus send_msg;
	dontaudit rpm_t $1:dbus send_msg;
')

########################################
## <summary>
##	Send and receive messages from
##	RPM Script over dbus.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_script_dbus_chat',`
	gen_require(`
		type rpm_script_t;
		class dbus send_msg;
	')

	allow $1 rpm_script_t:dbus send_msg;
	allow rpm_script_t $1:dbus send_msg;
')

#####################################
## <summary>
##	Append RPM log files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_append_log',`
	gen_require(`
		type rpm_log_t;
	')

	append_files_pattern($1, rpm_log_t, rpm_log_t)
	logging_search_logs($1)
')

########################################
## <summary>
##	Manage RPM log files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_manage_log',`
	gen_require(`
		type rpm_log_t;
	')

	allow $1 rpm_log_t:file manage_file_perms;
	logging_rw_generic_log_dirs($1)
')

########################################
## <summary>
##	Search RPM log directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_search_log',`
	gen_require(`
		type rpm_log_t;
	')

	allow $1 rpm_log_t:dir search_dir_perms;
	logging_search_logs($1)
')

########################################
## <summary>
##	Inherit and use RPM Script file
##	descriptors.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_use_script_fds',`
	gen_require(`
		type rpm_script_t;
	')

	allow $1 rpm_script_t:fd use;
')

#####################################
## <summary>
##	Append RPM temporary files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_append_tmp_files',`
	gen_require(`
		type rpm_tmp_t;
	')

	append_files_pattern($1, rpm_tmp_t, rpm_tmp_t)
	files_search_tmp($1)
')

########################################
## <summary>
##	Manage RPM temporary content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_manage_tmp_files',`
	gen_require(`
		type rpm_tmp_t;
	')

	manage_dirs_pattern($1, rpm_tmp_t, rpm_tmp_t)
	manage_files_pattern($1, rpm_tmp_t, rpm_tmp_t)
	manage_lnk_files_pattern($1, rpm_tmp_t, rpm_tmp_t)
	files_search_tmp($1)
')

########################################
## <summary>
##	Manage RPM Script temporary content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_manage_script_tmp_files',`
	gen_require(`
		type rpm_script_tmp_t;
	')

	manage_dirs_pattern($1, rpm_script_tmp_t, rpm_script_tmp_t)
	manage_files_pattern($1, rpm_script_tmp_t, rpm_script_tmp_t)
	manage_lnk_files_pattern($1, rpm_script_tmp_t, rpm_script_tmp_t)
	files_search_tmp($1)
')

########################################
## <summary>
##	Read RPM Script temporary files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_read_script_tmp_files',`
	gen_require(`
		type rpm_script_tmp_t;
	')

	read_files_pattern($1, rpm_script_tmp_t, rpm_script_tmp_t)
	read_lnk_files_pattern($1, rpm_script_tmp_t, rpm_script_tmp_t)
	files_search_tmp($1)
')

########################################
## <summary>
##	Read RPM cache files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_read_cache',`
	gen_require(`
		type rpm_var_cache_t;
	')

	allow $1 rpm_var_cache_t:dir list_dir_perms;
	read_files_pattern($1, rpm_var_cache_t, rpm_var_cache_t)
	read_lnk_files_pattern($1, rpm_var_cache_t, rpm_var_cache_t)
	files_search_var($1)
')

########################################
## <summary>
##	Manage RPM cache content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_manage_cache',`
	gen_require(`
		type rpm_var_cache_t;
	')

	manage_dirs_pattern($1, rpm_var_cache_t, rpm_var_cache_t)
	manage_files_pattern($1, rpm_var_cache_t, rpm_var_cache_t)
	manage_lnk_files_pattern($1, rpm_var_cache_t, rpm_var_cache_t)
	files_search_var_lib($1)
')

########################################
## <summary>
##	Read RPM lib content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_read_db',`
	gen_require(`
		type rpm_var_lib_t;
	')

	allow $1 rpm_var_lib_t:dir list_dir_perms;
	read_files_pattern($1, rpm_var_lib_t, rpm_var_lib_t)
	read_lnk_files_pattern($1, rpm_var_lib_t, rpm_var_lib_t)
	files_search_var_lib($1)
	rpm_read_cache($1)
')

########################################
## <summary>
##	Delete RPM lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_delete_db',`
	gen_require(`
		type rpm_var_lib_t;
	')

	delete_files_pattern($1, rpm_var_lib_t, rpm_var_lib_t)
	files_search_var_lib($1)
')

########################################
## <summary>
##	Manage RPM lib content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_manage_db',`
	gen_require(`
		type rpm_var_lib_t;
	')

	manage_files_pattern($1, rpm_var_lib_t, rpm_var_lib_t)
	manage_lnk_files_pattern($1, rpm_var_lib_t, rpm_var_lib_t)
	files_search_var_lib($1)
')

########################################
## <summary>
##	Do not audit attempts to manage
##	RPM lib content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`rpm_dontaudit_manage_db',`
	gen_require(`
		type rpm_var_lib_t;
	')

	dontaudit $1 rpm_var_lib_t:dir rw_dir_perms;
	dontaudit $1 rpm_var_lib_t:file manage_file_perms;
	dontaudit $1 rpm_var_lib_t:lnk_file manage_lnk_file_perms;
')

#####################################
## <summary>
##	Manage RPM PID files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_manage_pid_files',`
	gen_require(`
		type rpm_var_run_t;
	')

	manage_files_pattern($1, rpm_var_run_t, rpm_var_run_t)
	files_search_pids($1)
')

######################################
## <summary>
##	Create files in PID directories
##	with RPM PID file types.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_pid_filetrans',`
	gen_require(`
		type rpm_var_run_t;
	')

	files_pid_filetrans($1, rpm_var_run_t, file)
')

#####################################
## <summary>
##	Read RPM PID files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_read_pid_files',`
	gen_require(`
		type rpm_var_run_t;
	')

	read_files_pattern($1, rpm_var_run_t, rpm_var_run_t)
	files_search_pids($1)
')

########################################
## <summary>
##	Execute a domain transition to
##	run RPM Script.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`rpm_transition_script',`
	gen_require(`
		type rpm_script_t;
		attribute rpm_transition_domain;
	')

	typeattribute $1 rpm_transition_domain;
	allow $1 rpm_script_t:process transition;

	allow $1 rpm_script_t:fd use;
	allow rpm_script_t $1:fd use;
	allow rpm_script_t $1:fifo_file rw_fifo_file_perms;
	allow rpm_script_t $1:process sigchld;
')

########################################
## <summary>
##	Read and write RPM inherited pipes.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`rpm_inherited_fifo',`
	gen_require(`
		attribute rpm_transition_domain;
	')

	allow $1 rpm_transition_domain:fifo_file rw_inherited_fifo_file_perms;
')
