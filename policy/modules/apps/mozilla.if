## <summary>Policy for Mozilla and related web browsers</summary>

########################################
## <summary>
##	Role access for mozilla
## </summary>
## <param name="role">
##	<summary>
##	Role allowed access
##	</summary>
## </param>
## <param name="domain">
##	<summary>
##	User domain for the role
##	</summary>
## </param>
#
interface(`mozilla_role',`
	gen_require(`
		type mozilla_t, mozilla_exec_t, mozilla_home_t;
	')

	role $1 types mozilla_t;

	domain_auto_trans($2, mozilla_exec_t, mozilla_t)
	# Unrestricted inheritance from the caller.
	allow $2 mozilla_t:process { noatsecure siginh rlimitinh };
	allow mozilla_t $2:fd use;
	allow mozilla_t $2:process { sigchld signull };
	allow mozilla_t $2:unix_stream_socket connectto;

	# Allow the user domain to signal/ps.
	ps_process_pattern($2, mozilla_t)
	allow $2 mozilla_t:process signal_perms;

	allow $2 mozilla_t:fd use;
	allow $2 mozilla_t:shm { associate getattr };
	allow $2 mozilla_t:shm { unix_read unix_write };
	allow $2 mozilla_t:unix_stream_socket connectto;

	# X access, Home files
	manage_dirs_pattern($2, mozilla_home_t, mozilla_home_t)
	manage_files_pattern($2, mozilla_home_t, mozilla_home_t)
	manage_lnk_files_pattern($2, mozilla_home_t, mozilla_home_t)
	relabel_dirs_pattern($2, mozilla_home_t, mozilla_home_t)
	relabel_files_pattern($2, mozilla_home_t, mozilla_home_t)
	relabel_lnk_files_pattern($2, mozilla_home_t, mozilla_home_t)

	mozilla_dbus_chat($2)

	userdom_manage_tmp_role($1, mozilla_t)

	optional_policy(`
		nsplugin_role($1, mozilla_t)
	')

	optional_policy(`
		pulseaudio_role($1, mozilla_t)
	')
')

########################################
## <summary>
##	Read mozilla home directory content
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`mozilla_read_user_home_files',`
	gen_require(`
		type mozilla_home_t;
	')

	allow $1 mozilla_home_t:dir list_dir_perms;
	allow $1 mozilla_home_t:file read_file_perms;
	allow $1 mozilla_home_t:lnk_file read_lnk_file_perms;
	userdom_search_user_home_dirs($1)
')

########################################
## <summary>
##	Write mozilla home directory content
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`mozilla_write_user_home_files',`
	gen_require(`
		type mozilla_home_t;
	')

	write_files_pattern($1, mozilla_home_t, mozilla_home_t)
	userdom_search_user_home_dirs($1)
')

########################################
## <summary>
##	Dontaudit attempts to read/write mozilla home directory content
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`mozilla_dontaudit_rw_user_home_files',`
	gen_require(`
		type mozilla_home_t;
	')

	dontaudit $1 mozilla_home_t:file { read write };
')

########################################
## <summary>
##	Dontaudit attempts to write mozilla home directory content
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`mozilla_dontaudit_manage_user_home_files',`
	gen_require(`
		type mozilla_home_t;
	')

	dontaudit $1 mozilla_home_t:dir manage_dir_perms;
	dontaudit $1 mozilla_home_t:file manage_file_perms;
')

########################################
## <summary>
##	Run mozilla in the mozilla domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`mozilla_domtrans',`
	gen_require(`
		type mozilla_t, mozilla_exec_t;
	')

	domtrans_pattern($1, mozilla_exec_t, mozilla_t)
')

########################################
## <summary>
##	Send and receive messages from
##	mozilla over dbus.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`mozilla_dbus_chat',`
	gen_require(`
		type mozilla_t;
		class dbus send_msg;
	')

	allow $1 mozilla_t:dbus send_msg;
	allow mozilla_t $1:dbus send_msg;
')

########################################
## <summary>
##	read/write mozilla per user tcp_socket
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`mozilla_rw_tcp_sockets',`
	gen_require(`
		type mozilla_t;
	')

	allow $1 mozilla_t:tcp_socket rw_socket_perms;
')

########################################
## <summary>
##	Write mozilla home directory content
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`mozilla_execmod_user_home_files',`
	gen_require(`
		type mozilla_home_t;
	')

	allow $1 mozilla_home_t:file execmod;
')

########################################
## <summary>
##	Execute mozilla_exec_t 
##	in the specified domain.
## </summary>
## <desc>
##	<p>
##	Execute a mozilla_exec_t
##	in the specified domain.  
##	</p>
##	<p>
##	No interprocess communication (signals, pipes,
##	etc.) is provided by this interface since
##	the domains are not owned by this module.
##	</p>
## </desc>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="target_domain">
##	<summary>
##	The type of the new process.
##	</summary>
## </param>
#
interface(`mozilla_exec_domtrans',`
	gen_require(`
		type mozilla_exec_t;
	')

	allow $2 mozilla_exec_t:file entrypoint;
	domtrans_pattern($1, mozilla_exec_t, $2)
')
