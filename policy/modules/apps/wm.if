## <summary>X Window Managers.</summary>

#######################################
## <summary>
##	The role template for the wm module.
## </summary>
## <param name="role_prefix">
##	<summary>
##	The prefix of the user domain (e.g., user
##	is the prefix for user_t).
##	</summary>
## </param>
## <param name="user_role">
##	<summary>
##	The role associated with the user domain.
##	</summary>
## </param>
## <param name="user_domain">
##	<summary>
##	The type of the user domain.
##	</summary>
## </param>
#
template(`wm_role_template',`
	gen_require(`
		type wm_exec_t;
		class dbus send_msg;
	')

	type $1_wm_t;
	domain_type($1_wm_t)
	domain_entry_file($1_wm_t, wm_exec_t)
	role $2 types $1_wm_t;

	allow $1_wm_t self:fifo_file rw_fifo_file_perms;
	allow $1_wm_t self:process getsched;
	allow $1_wm_t self:shm create_shm_perms;

	allow $1_wm_t $3:unix_stream_socket connectto;
	allow $3 $1_wm_t:unix_stream_socket connectto;
	allow $3 $1_wm_t:process { signal sigchld };
	allow $1_wm_t $3:process { signull sigkill };

	domtrans_pattern($3, wm_exec_t, $1_wm_t)

	kernel_read_system_state($1_wm_t)

	corecmd_bin_domtrans($1_wm_t, $3)
	corecmd_shell_domtrans($1_wm_t, $3)

	dev_read_urand($1_wm_t)

	files_read_etc_files($1_wm_t)
	files_read_usr_files($1_wm_t)

	fs_getattr_tmpfs($1_wm_t)

	mls_file_read_all_levels($1_wm_t)
	mls_file_write_all_levels($1_wm_t)
	mls_xwin_read_all_levels($1_wm_t)
	mls_xwin_write_all_levels($1_wm_t)
	mls_fd_use_all_levels($1_wm_t)

	auth_use_nsswitch($1_wm_t)

	miscfiles_read_fonts($1_wm_t)
	miscfiles_read_localization($1_wm_t)

	userdom_manage_home_role($2, $1_wm_t)
	userdom_manage_tmpfs_role($2, $1_wm_t)
	userdom_manage_tmp_role($2, $1_wm_t)

	optional_policy(`
		dbus_system_bus_client($1_wm_t)
		dbus_session_bus_client($1_wm_t)
		wm_dbus_chat($1, $3)
	')

	optional_policy(`
		pulseaudio_stream_connect($1_wm_t)
	')

	optional_policy(`
		xserver_role($2, $1_wm_t)
		xserver_manage_core_devices($1_wm_t)
	')

')

########################################
## <summary>
##	Execute the wm.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`wm_exec',`
	gen_require(`
		type wm_exec_t;
	')

	can_exec($1, wm_exec_t)
	corecmd_search_bin($1)
')

########################################
## <summary>
##	Send and receive messages from
##	wm over dbus.
## </summary>
## <param name="role_prefix">
##	<summary>
##	The prefix of the user domain (e.g., user
##	is the prefix for user_t).
##	</summary>
## </param>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`wm_dbus_chat',`
	gen_require(`
		type $1_wm_t;
		class dbus send_msg;
	')

	allow $2 $1_wm_t:dbus send_msg;
	allow $1_wm_t $2:dbus send_msg;
')

########################################
## <summary>
##	Read wm home files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`wm_read_user_home_files',`
	gen_require(`
		type wm_home_t;
	')

	allow $1 wm_home_t:dir search_dir_perms;
	allow $1 wm_home_t:file read_file_perms;
	userdom_search_user_home_dirs($1)
')
