## <summary>Advanced power management daemon.</summary>

########################################
## <summary>
##	Execute a domain transition to run
##	Apm.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`apm_domtrans_client',`
	gen_require(`
		type apm_t, apm_exec_t;
	')

	domtrans_pattern($1, apm_exec_t, apm_t)
	corecmd_search_bin($1)
')

########################################
## <summary>
##	Use file descriptors for apmd.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`apm_use_fds',`
	gen_require(`
		type apmd_t;
	')

	allow $1 apmd_t:fd use; 
')

########################################
## <summary>
##	Write Apmd pipes.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`apm_write_pipes',`
	gen_require(`
		type apmd_t;
	')

	allow $1 apmd_t:fifo_file write_fifo_file_perms; 
')

########################################
## <summary>
##	Read and write to Apm unix stream
##	sockets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`apm_rw_stream_sockets',`
	gen_require(`
		type apmd_t;
	')

	allow $1 apmd_t:unix_stream_socket rw_inherited_sock_file_perms;
')

########################################
## <summary>
##	Append Apm log files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`apm_append_log',`
	gen_require(`
		type apmd_log_t;
	')

	allow $1 apmd_log_t:file append_file_perms;
	logging_search_logs($1)
')

########################################
## <summary>
##	Connect to Apmd over unix stream
##	sockets.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`apm_stream_connect',`
	gen_require(`
		type apmd_t, apmd_var_run_t;
	')

	allow $1 apmd_var_run_t:sock_file write_sock_file_perms;
	allow $1 apmd_t:unix_stream_socket connectto;
	files_search_pids($1)
')
