## <summary>Filesystem automounter service.</summary>

########################################
## <summary>
##	Execute a domain transition to run
##	Automount.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`automount_domtrans',`
	gen_require(`
		type automount_t, automount_exec_t;
	')

	domtrans_pattern($1, automount_exec_t, automount_t)
	corecmd_search_bin($1)
')

########################################
## <summary>
##	Send generic signals to Automount.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`automount_signal',`
	gen_require(`
		type automount_t;
	')

	allow $1 automount_t:process signal;
')

########################################
## <summary>
##	Execute Automount.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`automount_exec_config',`
	refpolicywarn(`$0(): has been deprecated, please use files_exec_etc_files() instead.')
	files_exec_etc_files($1)
')

########################################
## <summary>
##	Read Automount state files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to allow access.
##	</summary>
## </param>
#
interface(`automount_read_state',`
	gen_require(`
		type automount_t;
	')

	ps_process_pattern($1, automount_t)
	kernel_search_proc($1)
')

########################################
## <summary>
##	Do not audit attempts to use
##	Automount file descriptors.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`automount_dontaudit_use_fds',`
	gen_require(`
		type automount_t;
	')

	dontaudit $1 automount_t:fd use;
')

########################################
## <summary>
##	Do not audit attempts to write
##	automount daemon pipes.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`automount_dontaudit_write_pipes',`
	gen_require(`
		type automount_t;
	')

	dontaudit $1 automount_t:fifo_file write_fifo_file_perms;
')

########################################
## <summary>
##	Do not audit attempts to get
##	attributes of automount temporary
##	directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`automount_dontaudit_getattr_tmp_dirs',`
	gen_require(`
		type automount_tmp_t;
	')

	dontaudit $1 automount_tmp_t:dir getattr_dir_perms;
')

########################################
## <summary>
##	All of the rules required to administrate 
##	an automount environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`automount_admin',`
	gen_require(`
		type automount_t, automount_lock_t, automount_tmp_t;
		type automount_var_run_t, automount_initrc_exec_t;
	')

	allow $1 automount_t:process { ptrace signal_perms getattr };
	ps_process_pattern($1, automount_t)

	init_labeled_script_domtrans($1, automount_initrc_exec_t)
	domain_system_change_exemption($1)
	role_transition $2 automount_initrc_exec_t system_r;
	allow $2 system_r;

	admin_pattern($1, automount_lock_t)
	files_search_var($1)

	admin_pattern($1, automount_tmp_t)
	files_search_tmp($1)

	admin_pattern($1, automount_var_run_t)
	files_search_pids($1)
')
